"use strict";(globalThis.webpackChunkth_v3=globalThis.webpackChunkth_v3||[]).push([[5345],{64145:(t,e,n)=>{n.d(e,{BH:()=>w,K:()=>F,KC:()=>p,NL:()=>h,QI:()=>m,Tg:()=>f,Yx:()=>c,nb:()=>_,wF:()=>S,xQ:()=>g});var r=n(43404),o=n(92026),i=n(99278),a=n(17314);const l=new Map;l.set("meter-per-second",1),l.set("kilometer-per-hour",.277778),l.set("knots",.514444),l.set("feet-per-second",.3048),l.set("mile-per-hour",.44704);const s=180/Math.PI,h=new r.X({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function c(t,e){return l.get(t)/l.get(e)||1}function u(t){return(450-t)%360}function f(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"geographic";const[n,r]=t,o=Math.sqrt(n*n+r*r);let i=Math.atan2(r,n)*s;return i=(360+i)%360,"geographic"===e&&(i=u(i)),[o,i]}function d(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"geographic",n=t[1];"geographic"===e&&(n=u(n)),n%=360;const r=t[0];return[r*Math.cos(n/s),r*Math.sin(n/s)]}function g(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"geographic";if(!(0,a.nk)(t)||(0,o.Wi)(n))return t;const i="vector-magdir"===e?t.clone():(0,o.Wg)(p(t,e)),l=i.pixels[1];for(let o=0;o<l.length;o++)l[o]="geographic"===r?(l[o]+n[o]+270)%360:(l[o]+360-n[o])%360;return"vector-magdir"===e?i:p(i,"vector-magdir")}function p(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"geographic",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if(!(0,a.nk)(t))return t;const{pixels:o,width:l,height:s}=t,h=l*s,c=o[0],u=o[1],g=t.pixelType.startsWith("f")?t.pixelType:"f32",p=i.Z.createEmptyBand(g,h),m=i.Z.createEmptyBand(g,h);let w=0;for(let i=0;i<s;i++)for(let t=0;t<l;t++)"vector-uv"===e?([p[w],m[w]]=f([c[w],u[w]],n),p[w]*=r):([p[w],m[w]]=d([c[w],u[w]],n),p[w]*=r,m[w]*=r),w++;const M=new i.Z({pixelType:g,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[p,m]});return M.updateStatistics(),M}function m(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;if(1===n||!(0,a.nk)(t))return t;const r=t.clone(),{pixels:o,width:i,height:l}=r,s=o[0],h=o[1];let c=0;for(let a=0;a<l;a++)for(let t=0;t<i;t++)"vector-uv"===e?(s[c]*=n,h[c]*=n):s[c]*=n,c++;return r.updateStatistics(),r}function w(t,e,n,r,i){if(!(0,o.pC)(i)||!i.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/r),height:Math.round(n/r),resolution:t.width/e};const a=i.xmin,l=i.ymax,s=(t.xmax-t.xmin)/e*r,h=(t.ymax-t.ymin)/n*r,c=(s+h)/2;return t.xmin=a+Math.floor((t.xmin-a)/s)*s,t.xmax=a+Math.ceil((t.xmax-a)/s)*s,t.ymin=l+Math.floor((t.ymin-l)/h)*h,t.ymax=l+Math.ceil((t.ymax-l)/h)*h,{extent:t,width:Math.round(t.width/s),height:Math.round(t.height/h),resolution:c}}const M=function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Math.PI,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];r&&(n=(2*Math.PI-n)%(2*Math.PI));const o=r?-1:1,i=13*o,a=-7*o,l=-2*o,s=-16*o,h=21.75,[c,u]=y(0,e+i,n,h),[f,d]=y(t-5.5,e+a,n,h),[g,p]=y(t+5.5,e+a,n,h),[m,w]=y(t-1.5,e+l,n,h),[M,x]=y(t+1.5,e+l,n,h),[v,k]=y(t-1.5,e+s,n,h),[P,b]=y(t+1.5,e+s,n,h);return[c,u,f,d,m,w,M,x,g,p,v,k,P,b]}(0,0,0);function x(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Math.PI,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=10,o=n?-1:1,i=5*o,a=20*o,l=25*o,s=45,h=0,c=0,u=2,f=0,d=u*o;let[g,p]=[h+r/2,c-a],[m,w]=[g+u,p],[M,x]=[m-f,w+d],[v,k]=[h-r/2,c-l],[P,b]=[v+f,k-d],A=Math.ceil(t/5),I=Math.floor(A/10);A-=8*I;const F=[],S=[];for(let Z=0;Z<A/2;Z++,I--){I<=0&&A%2==1&&Z===(A-1)/2&&(v=h,P=v+f,k=(k+p)/2,b=k-d);const[t,n]=y(v,k,e,s);if(I>0){const[r,o]=y(m,k,e,s),[i,a]=y(g,p,e,s);F.push(r),F.push(o),F.push(t),F.push(n),F.push(i),F.push(a)}else{const[r,o]=y(m,w,e,s),[i,a]=y(M,x,e,s),[l,h]=y(P,b,e,s);S.push(t),S.push(n),S.push(l),S.push(h),S.push(i),S.push(a),S.push(r),S.push(o)}k+=i,p+=i,w+=i,x+=i,b+=i}const[_,D]=y(h+r/2,c+a,e,s),V=r/2+u,[T,L]=y(h+V,c+a,e,s),[U,C]=y(h+r/2,c-l,e,s),[q,O]=y(h+V,c-l,e,s);return{pennants:F,barbs:S,shaft:[_,D,T,L,U,C,q,O]}}function y(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;const o=Math.sqrt(t*t+e*e)/r,i=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[o,(2*Math.PI+i-n)%(2*Math.PI)]}const v=[0,1,3,6,10,16,21,27,33,40,47,55,63],k=[0,.5,1,1.5,2],P=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function b(t,e,n,r){const o=c(r||"knots",n);let i;for(i=1;i<e.length;i++)if(i===e.length-1){if(t<e[i]*o)break}else if(t<=e[i]*o)break;return Math.min(i-1,e.length-2)}function A(t,e,n,r,o){let i=0;switch(e){case"beaufort_kn":i=b(t,v,"knots",n);break;case"beaufort_km":i=b(t,v,"kilometer-per-hour",n);break;case"beaufort_ft":i=b(t,v,"feet-per-second",n);break;case"beaufort_m":i=b(t,v,"meter-per-second",n);break;case"classified_arrow":i=b(t,o,r,n);break;case"ocean_current_m":i=b(t,k,"meter-per-second",n);break;case"ocean_current_kn":i=b(t,P,"knots",n)}return i}const I=[];function F(t,e){let n=0,r=0;const{width:o,height:i,mask:a}=t,l=t.pixels[0],s=[],u=[],f=c(h.fromJSON(e.inputUnit),"knots"),d="wind_speed"===e.style?5:Number.MAX_VALUE;for(let h=0;h<i;h++)for(let t=0;t<o;t++){const e=l[h*o+t]*f;if((!a||a[h*o+t])&&e<d){for(let r=0;r<4;r++)s[n++]=(t+.5)/o,s[n++]=(h+.5)/i,s[n++]=r<2?-.5:.5,s[n++]=r%2==0?-.5:.5,s[n++]=0,s[n++]=e;const a=4*(n/24-1);u[r++]=a,u[r++]=a+1,u[r++]=a+2,u[r++]=a+1,u[r++]=a+2,u[r++]=a+3}}return{vertexData:new Float32Array(s),indexData:new Uint32Array(u)}}function S(t,e){return"simple_scalar"===e.style?F(t,e):"wind_speed"===e.style?function(t,e){if(0===I.length)for(let h=0;h<30;h++)I.push(x(5*h,0));const n=c(h.fromJSON(e.inputUnit),"knots"),{width:r,height:o,mask:i}=t,a=t.pixels[0],l=t.pixels[1],s=[],u=[];let f=0,d=0;for(let h=0;h<o;h++)for(let t=0;t<r;t++){const e=h*r+t,c=a[e]*n;if((!i||i[h*r+t])&&c>=5){var g;const n=null!=(g=(l[e]+360)%360/180*Math.PI)?g:2*Math.PI*Math.random(),{pennants:i,barbs:a,shaft:p}=I[Math.min(Math.floor(c/5),29)];if(i.length+a.length===0)continue;let m=s.length/6;const w=(t+.5)/r,M=(h+.5)/o;for(let t=0;t<i.length;t+=2)s[f++]=w,s[f++]=M,s[f++]=i[t],s[f++]=i[t+1]+n,s[f++]=0,s[f++]=c;for(let t=0;t<a.length;t+=2)s[f++]=w,s[f++]=M,s[f++]=a[t],s[f++]=a[t+1]+n,s[f++]=0,s[f++]=c;for(let t=0;t<p.length;t+=2)s[f++]=w,s[f++]=M,s[f++]=p[t],s[f++]=p[t+1]+n,s[f++]=0,s[f++]=c;for(let t=0;t<i.length/6;t++)u[d++]=m,u[d++]=m+1,u[d++]=m+2,m+=3;for(let t=0;t<a.length/8;t++)u[d++]=m,u[d++]=m+1,u[d++]=m+2,u[d++]=m+1,u[d++]=m+2,u[d++]=m+3,m+=4;u[d++]=m+0,u[d++]=m+1,u[d++]=m+2,u[d++]=m+1,u[d++]=m+3,u[d++]=m+2,m+=4}}return{vertexData:new Float32Array(s),indexData:new Uint32Array(u)}}(t,e):function(t,e){const{style:n,inputUnit:r,outputUnit:o,breakValues:i}=e,a=h.fromJSON(r),l=h.fromJSON(o);let s=0,c=0;const{width:u,height:f,mask:d}=t,g=t.pixels[0],p=t.pixels[1],m=d?d.filter((t=>t>0)).length:u*f,w=new Float32Array(42*m),x=new Uint32Array(15*m);for(let h=0;h<f;h++)for(let t=0;t<u;t++){const e=h*u+t;if(!d||d[h*u+t]){var y;const r=null!=(y=(p[e]+360)%360/180*Math.PI)?y:2*Math.PI*Math.random(),o=A(g[e],n,a,l,i);for(let n=0;n<M.length;n+=2)w[s++]=(t+.5)/u,w[s++]=(h+.5)/f,w[s++]=M[n],w[s++]=M[n+1]+r,w[s++]=o,w[s++]=g[e];const d=7*(s/42-1);x[c++]=d,x[c++]=d+1,x[c++]=d+2,x[c++]=d+0,x[c++]=d+4,x[c++]=d+3,x[c++]=d+0,x[c++]=d+2,x[c++]=d+3,x[c++]=d+2,x[c++]=d+5,x[c++]=d+3,x[c++]=d+5,x[c++]=d+6,x[c++]=d+3}}return{vertexData:w,indexData:x}}(t,e)}function _(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[0,0],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const{width:a,height:l,mask:s}=t,[h,c]=t.pixels,[u,g]=r,p=Math.round((a-u)/n),m=Math.round((l-g)/n),w=p*m,M=new Float32Array(w),x=new Float32Array(w),y=new Uint8Array(w),v="vector-uv"===e;for(let i=0;i<m;i++)for(let t=0;t<p;t++){let e=0;const r=i*p+t,m=Math.max(0,i*n+g),w=Math.max(0,t*n+u),k=Math.min(l,m+n),P=Math.min(a,w+n);for(let t=m;t<k;t++)for(let n=w;n<P;n++){const o=t*a+n;if(!s||s[o]){e++;const t=v?[h[o],c[o]]:[h[o],(360+c[o])%360],[n,i]=v?t:d(t);M[r]+=n,x[r]+=i}}if(e>=(k-m)*(P-w)*(1-o)){y[r]=1;const[t,n]=f([M[r]/e,x[r]/e]);M[r]=t,x[r]=n}else y[r]=0,M[r]=0,x[r]=0}const k=new i.Z({width:p,height:m,pixels:[M,x],mask:y});return k.updateStatistics(),k}},55185:(t,e,n)=>{n.d(e,{KK:()=>w,z_:()=>u});n(59486);var r=n(32718),o=n(16889),i=n(92026),a=n(66978),l=n(84936),s=n(92975),h=n(53866);const c=r.Z.getLogger("esri.views.2d.engine.flow.dataUtils");async function u(t,e,n){const r=performance.now(),o=f(t,e),i=performance.now(),s=g(t,o,e.width,e.height),h=performance.now(),u=function(t,e){const n=new l.Z,r=t.reduce(((t,e)=>t+e.length),0),o=new Float32Array(4*r),i=new Array(t.length);let a=0,s=0;for(const l of t){const t=a;for(const e of l)o[4*a+0]=e.x,o[4*a+1]=e.y,o[4*a+2]=e.t,o[4*a+3]=e.speed,a++;i[s++]={startVertex:t,numberOfVertices:l.length,totalTime:l[l.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:o,lineDescriptors:i}}(s,!0),d=performance.now(),m=p(u),w=performance.now();if(t.profile){const t={"_createFlowFieldFromData()":Math.round(i-r),"_getStreamlines()":Math.round(h-i),"createAnimatedLinesData()":Math.round(d-h),"createLinesMesh()":Math.round(w-d),"Total elapsed time":Math.round(w-r)};c.info("createStreamlinesMesh profile",t)}return await Promise.resolve(),(0,a.k_)(n),m}function f(t,e){const n=function(t,e,n,r){if(0===r)return t;const o=Math.round(3*r),i=new Array(2*o+1);let a=0;for(let h=-o;h<=o;h++){const t=Math.exp(-h*h/(r*r));i[h+o]=t,a+=t}for(let h=-o;h<=o;h++)i[h+o]/=a;const l=new Float32Array(t.length);for(let h=0;h<n;h++)for(let n=0;n<e;n++){let r=0,a=0;for(let l=-o;l<=o;l++){if(n+l<0||n+l>=e)continue;const s=i[l+o];r+=s*t[2*(h*e+(n+l))+0],a+=s*t[2*(h*e+(n+l))+1]}l[2*(h*e+n)+0]=r,l[2*(h*e+n)+1]=a}const s=new Float32Array(t.length);for(let h=0;h<e;h++)for(let t=0;t<n;t++){let r=0,a=0;for(let s=-o;s<=o;s++){if(t+s<0||t+s>=n)continue;const c=i[s+o];r+=c*l[2*((t+s)*e+h)+0],a+=c*l[2*((t+s)*e+h)+1]}s[2*(t*e+h)+0]=r,s[2*(t*e+h)+1]=a}return s}(e.data,e.width,e.height,t.smoothing);return t.interpolate?(t,r)=>{const o=Math.floor(t),i=Math.floor(r);if(o<0||o>=e.width)return[0,0];if(i<0||i>=e.height)return[0,0];const a=t-o,l=r-i,s=o,h=i,c=o<e.width-1?o+1:o,u=i<e.height-1?i+1:i,f=n[2*(h*e.width+s)],d=n[2*(h*e.width+c)],g=n[2*(u*e.width+s)],p=n[2*(u*e.width+c)],m=n[2*(h*e.width+s)+1],w=n[2*(h*e.width+c)+1];return[(f*(1-l)+g*l)*(1-a)+(d*(1-l)+p*l)*a,(m*(1-l)+n[2*(u*e.width+s)+1]*l)*(1-a)+(w*(1-l)+n[2*(u*e.width+c)+1]*l)*a]}:(t,r)=>{const o=Math.round(t),i=Math.round(r);return o<0||o>=e.width||i<0||i>=e.height?[0,0]:[n[2*(i*e.width+o)+0],n[2*(i*e.width+o)+1]]}}function d(t,e,n,r,o,i,a,l,s){const h=[];let c=n,u=r,f=0,[d,g]=e(c,u);d*=t.velocityScale,g*=t.velocityScale;const p=Math.sqrt(d*d+g*g);let m,w;h.push({x:c,y:u,t:f,speed:p});for(let M=0;M<t.verticesPerLine;M++){let[n,r]=e(c,u);n*=t.velocityScale,r*=t.velocityScale;const d=Math.sqrt(n*n+r*r);if(d<t.minSpeedThreshold)return h;const g=n/d,p=r/d;if(c+=g*t.segmentLength,u+=p*t.segmentLength,f+=t.segmentLength/d,Math.acos(g*m+p*w)>t.maxTurnAngle)return h;if(t.mergeLines){const t=Math.round(c*s),e=Math.round(u*s);if(t<0||t>a-1||e<0||e>l-1)return h;const n=i[e*a+t];if(-1!==n&&n!==o)return h;i[e*a+t]=o}h.push({x:c,y:u,t:f,speed:d}),m=g,w=p}return h}function g(t,e,n,r){const o=[],i=new l.Z,a=1/Math.max(t.lineCollisionWidth,1),s=Math.round(n*a),h=Math.round(r*a),c=new Int32Array(s*h);for(let l=0;l<c.length;l++)c[l]=-1;const u=[];for(let l=0;l<r;l+=t.lineSpacing)for(let e=0;e<n;e+=t.lineSpacing)u.push({x:e,y:l,sort:i.getFloat()});u.sort(((t,e)=>t.sort-e.sort));for(const{x:l,y:f}of u)if(i.getFloat()<t.density){const n=d(t,e,l,f,o.length,c,s,h,a);if(n.length<2)continue;o.push(n)}return o}function p(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;const{lineVertices:n,lineDescriptors:r}=t;let o=0,i=0;for(const f of r)o+=2*f.numberOfVertices,i+=6*(f.numberOfVertices-1);const a=new Float32Array(9*o),l=new Uint32Array(i);let s=0,h=0;function c(){l[h++]=s-2,l[h++]=s,l[h++]=s-1,l[h++]=s,l[h++]=s+1,l[h++]=s-1}function u(t,e,n,r,o,i,l,h){const c=9*s;let u=0;a[c+u++]=t,a[c+u++]=e,a[c+u++]=1,a[c+u++]=n,a[c+u++]=i,a[c+u++]=l,a[c+u++]=r/2,a[c+u++]=o/2,a[c+u++]=h,s++,a[c+u++]=t,a[c+u++]=e,a[c+u++]=-1,a[c+u++]=n,a[c+u++]=i,a[c+u++]=l,a[c+u++]=-r/2,a[c+u++]=-o/2,a[c+u++]=h,s++}for(const f of r){const{totalTime:t,timeSeed:r}=f;let o=null,i=null,a=null,l=null,s=null,h=null;for(let d=0;d<f.numberOfVertices;d++){const g=n[4*(f.startVertex+d)+0],p=n[4*(f.startVertex+d)+1],m=n[4*(f.startVertex+d)+2],w=n[4*(f.startVertex+d)+3];let M=null,x=null,y=null,v=null;if(d>0){M=g-o,x=p-i;const n=Math.sqrt(M*M+x*x);if(M/=n,x/=n,d>1){let t=M+s,n=x+h;const r=Math.sqrt(t*t+n*n);t/=r,n/=r;const o=Math.min(1/(t*M+n*x),e);t*=o,n*=o,y=-n,v=t}else y=-x,v=M;null!==y&&null!==v&&(u(o,i,a,y,v,t,r,w),c())}o=g,i=p,a=m,s=M,h=x,l=w}u(o,i,a,-h,s,t,r,l)}return{vertexData:a,indexData:l}}function m(t,e){const n=e.pixels,{width:r,height:i}=e,a=new Float32Array(r*i*2);if("vector-uv"===t)for(let o=0;o<r*i;o++)a[2*o+0]=n[0][o],a[2*o+1]=-n[1][o];else if("vector-magdir"===t)for(let l=0;l<r*i;l++){const t=n[0][l],e=(0,o.Vl)(n[1][l]),r=Math.cos(e-Math.PI/2),i=Math.sin(e-Math.PI/2);a[2*l+0]=r*t,a[2*l+1]=i*t}return{data:a,width:r,height:i}}async function w(t,e,n,r,o,i){const a=(0,s.C5)(e.spatialReference);if(!a)return M(t,e,n,r,o,i);const[l,c]=a.valid,u=c-l,f=Math.ceil(e.width/u),d=e.width/f,g=Math.round(n/f);let p=e.xmin;const m=[];for(let s=0;s<f;s++){const n=new h.Z({xmin:p,xmax:p+d,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});m.push(M(t,n,g,r,o,i)),p+=d}const w=await Promise.all(m),x={data:new Float32Array(n*r*2),width:n,height:r};let y=0;for(const s of w){for(let t=0;t<s.height;t++)for(let e=0;e<s.width;e++)y+e>=n||(x.data[2*(t*n+y+e)+0]=s.data[2*(t*s.width+e)+0],x.data[2*(t*n+y+e)+1]=s.data[2*(t*s.width+e)+1]);y+=s.width}return x}async function M(t,e,n,r,o,a){const l={requestProjectedLocalDirections:!0,signal:a};if((0,i.pC)(o)&&(l.timeExtent=o),"imagery"===t.type){await t.load({signal:a});const o=t.rasterInfo.dataType,s=await t.fetchImage(e,n,r,l);return!s||(0,i.Wi)(s.pixelData)||(0,i.Wi)(s.pixelData.pixelBlock)?{data:new Float32Array(n*r*2),width:n,height:r}:m(o,s.pixelData.pixelBlock)}await t.load({signal:a});const s=t.rasterInfo.dataType,h=await t.fetchPixels(e,n,r,l);return!h||(0,i.Wi)(h.pixelBlock)?{data:new Float32Array(n*r*2),width:n,height:r}:m(s,h.pixelBlock)}}}]);
//# sourceMappingURL=5345.0b799de1.chunk.js.map