"use strict";(globalThis.webpackChunkth_v3=globalThis.webpackChunkth_v3||[]).push([[7314],{99278:(t,e,i)=>{i.d(e,{Z:()=>m});var s,n=i(27366),l=(i(93169),i(10064)),r=i(46784),o=i(84652),a=i(32718),h=i(92026),f=i(49861),c=i(89125),u=i(69912);const p=a.Z.getLogger("esri.layers.support.PixelBlock");let x=s=class extends r.wq{constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.pixels=null,this.statistics=null}static createEmptyBand(t,e){return new(s.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].indexOf(e)>-1?e="u8":-1===["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].indexOf(e)&&(e="f32"),e}getPlaneCount(){return this.pixels&&this.pixels.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new l.Z("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics||{minValue:null,maxValue:null})}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if(t)for(let i=0;i<t.length;i++)t[i]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t)return;let e;switch(t){case"u8":e=[0,255];break;case"u16":e=[0,65535];break;case"u32":e=[0,4294967295];break;case"s8":e=[-128,127];break;case"s16":e=[-32768,32767];break;case"s32":e=[-2147483648,2147483647];break;default:e=[-34e38,34e38]}const[i,n]=e,l=this.pixels,r=this.width*this.height,o=l.length;let a,h,f;const c=[];for(let u=0;u<o;u++){f=s.createEmptyBand(t,r),a=l[u];for(let t=0;t<r;t++)h=a[t],f[t]=h>n?n:h<i?i:h;c.push(f)}this.pixels=c,this.pixelType=t}extractBands(t){if((0,h.Wi)(t)||0===t.length||null==this.pixels||0===this.pixels.length)return this;const e=this.pixels.length,i=t.some((t=>t>=this.pixels.length)),n=e===t.length&&!t.some(((t,e)=>t!==e));return i||n?this:new s({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>this.pixels[t])),statistics:this.statistics&&t.map((t=>this.statistics[t]))})}clone(){const t=new s({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const i=s.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const s=this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=s?this.pixels[e].slice(0,this.pixels[e].length):new i(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=(0,o.d9)(this.statistics[e]);return t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:i,pixels:s}=this;if(!t||!s||!s.length)return void p.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let n,l,r,o;n=l=r=s[0],s.length>=3?(l=s[1],r=s[2]):2===s.length&&(l=s[1]);const a=new Uint32Array(t),h=this.width*this.height;if(n.length===h)if(e&&e.length===h)if(i)for(o=0;o<h;o++)e[o]&&(a[o]=e[o]<<24|r[o]<<16|l[o]<<8|n[o]);else for(o=0;o<h;o++)e[o]&&(a[o]=255<<24|r[o]<<16|l[o]<<8|n[o]);else for(o=0;o<h;o++)a[o]=255<<24|r[o]<<16|l[o]<<8|n[o];else p.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:i,statistics:s}=this;if(!t||!e||!e.length)return void p.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const n=this.pixelType;let l=1,r=0,o=1;if(s&&s.length>0)r=s.map((t=>t.minValue)).reduce(((t,e)=>Math.min(t,e))),o=s.map((t=>t.maxValue-t.minValue)).reduce(((t,e)=>Math.max(t,e))),l=255/o;else{let t=255;"s8"===n?(r=-128,t=127):"u16"===n?t=65535:"s16"===n?(r=-32768,t=32767):"u32"===n?t=4294967295:"s32"===n?(r=-2147483648,t=2147483647):"f32"===n?(r=-34e38,t=34e38):"f64"===n&&(r=-Number.MAX_VALUE,t=Number.MAX_VALUE),l=255/(t-r)}const a=new Uint32Array(t),h=this.width*this.height;let f,c,u,x,m;if(f=c=u=e[0],f.length!==h)return p.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(c=e[1],e.length>=3&&(u=e[2]),i&&i.length===h)for(x=0;x<h;x++)i[x]&&(a[x]=255<<24|(u[x]-r)*l<<16|(c[x]-r)*l<<8|(f[x]-r)*l);else for(x=0;x<h;x++)a[x]=255<<24|(u[x]-r)*l<<16|(c[x]-r)*l<<8|(f[x]-r)*l;else if(i&&i.length===h)for(x=0;x<h;x++)m=(f[x]-r)*l,i[x]&&(a[x]=255<<24|m<<16|m<<8|m);else for(x=0;x<h;x++)m=(f[x]-r)*l,a[x]=255<<24|m<<16|m<<8|m}_fillFrom32Bit(t){const{pixels:e,mask:i}=this;if(!t||!e||!e.length)return p.error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let s,n,l,r;s=n=l=e[0],e.length>=3?(n=e[1],l=e[2]):2===e.length&&(n=e[1]);const o=this.width*this.height;if(s.length!==o)return p.error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let a=0;if(i&&i.length===o)for(r=0;r<o;r++)t[a++]=s[r],t[a++]=n[r],t[a++]=l[r],t[a++]=1&i[r];else for(r=0;r<o;r++)t[a++]=s[r],t[a++]=n[r],t[a++]=l[r],t[a++]=1}_calculateBandStatistics(t,e){let i=1/0,s=-1/0;const n=t.length;let l,r=0;if(e)for(l=0;l<n;l++)e[l]&&(r=t[l],i=r<i?r:i,s=r>s?r:s);else for(l=0;l<n;l++)r=t[l],i=r<i?r:i,s=r>s?r:s;return{minValue:i,maxValue:s}}};(0,n._)([(0,f.Cb)({json:{write:!0}})],x.prototype,"width",void 0),(0,n._)([(0,f.Cb)({json:{write:!0}})],x.prototype,"height",void 0),(0,n._)([(0,f.Cb)({json:{write:!0}})],x.prototype,"pixelType",void 0),(0,n._)([(0,c.p)("pixelType")],x.prototype,"castPixelType",null),(0,n._)([(0,f.Cb)({json:{write:!0}})],x.prototype,"validPixelCount",void 0),(0,n._)([(0,f.Cb)({json:{write:!0}})],x.prototype,"mask",void 0),(0,n._)([(0,f.Cb)({json:{write:!0}})],x.prototype,"maskIsAlpha",void 0),(0,n._)([(0,f.Cb)({json:{write:!0}})],x.prototype,"pixels",void 0),(0,n._)([(0,f.Cb)({json:{write:!0}})],x.prototype,"statistics",void 0),x=s=(0,n._)([(0,u.j)("esri.layers.support.PixelBlock")],x);const m=x},17314:(t,e,i)=>{i.d(e,{Hv:()=>h,Kh:()=>d,Oh:()=>f,Pz:()=>o,Qh:()=>_,SJ:()=>a,Uk:()=>P,Vl:()=>T,XV:()=>x,dy:()=>p,hE:()=>c,nk:()=>l,oc:()=>u,pW:()=>k,qF:()=>r,us:()=>y,zp:()=>m});var s=i(92026),n=i(99278);function l(t){return(0,s.pC)(t)&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function r(t,e){if(null==e||!e.length||!l(t))return t;const i=t.pixels.length;return e&&e.some((t=>t>=i))||1===i&&1===e.length&&0===e[0]?t:i!==e.length||e.some(((t,e)=>t!==e))?new n.Z({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function o(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const i=e.sort(((t,e)=>t[0]-e[0]));let s=0;i[0][0]<0&&(s=i[0][0]);const n=Math.max(256,i[i.length-1][0]-s+1),l=new Uint8Array(4*n),r=[];let o,a=0,h=0;const f=5===i[0].length;if(n>65536)return i.forEach((t=>{r[t[0]-s]=f?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:s,alphaSpecified:f};if(t.fillUnspecified)for(o=i[h],a=o[0]-s;a<n;a++)l[4*a]=o[1],l[4*a+1]=o[2],l[4*a+2]=o[3],l[4*a+3]=f?o[4]:255,a===o[0]-s&&(o=h===i.length-1?o:i[++h]);else for(a=0;a<i.length;a++)o=i[a],h=4*(o[0]-s),l[h]=o[1],l[h+1]=o[2],l[h+2]=o[3],l[h+3]=f?o[4]:255;return{indexedColormap:l,offset:s,alphaSpecified:f}}function a(t,e){if(!l(t))return t;if(!e&&(e.indexedColormap||e.indexed2DColormap))return t;const i=t.clone(),s=i.pixels;let n=i.mask;const r=i.width*i.height;if(1!==s.length)return t;const{indexedColormap:o,indexed2DColormap:a,offset:h,alphaSpecified:f}=e,c=o.length-1;let u=0;const p=s[0],x=new Uint8Array(p.length),m=new Uint8Array(p.length),d=new Uint8Array(p.length);let g,y=0;if(o)if(n)for(u=0;u<r;u++)n[u]&&(y=4*(p[u]-h),y<h||y>c?n[u]=0:(x[u]=o[y],m[u]=o[y+1],d[u]=o[y+2],n[u]=o[y+3]));else{for(n=new Uint8Array(r),u=0;u<r;u++)y=4*(p[u]-h),y<h||y>c?n[u]=0:(x[u]=o[y],m[u]=o[y+1],d[u]=o[y+2],n[u]=o[y+3]);i.mask=n}else if(n)for(u=0;u<r;u++)n[u]&&(g=a[p[u]],x[u]=g[0],m[u]=g[1],d[u]=g[2],n[u]=g[3]);else{for(n=new Uint8Array(r),u=0;u<r;u++)g=a[p[u]],x[u]=g[0],m[u]=g[1],d[u]=g[2],n[u]=g[3];i.mask=n}return i.pixels=[x,m,d],i.statistics=null,i.pixelType="u8",i.maskIsAlpha=f,i}function h(t){if(!l(t))return null;t.statistics||t.updateStatistics();const{pixels:e,mask:i,pixelType:s,statistics:n}=t,r=t.width*t.height,o=e.length;let a,h,f,c,u;const p=[],x=[];let m,d,g,y,w,k,A,M,b,v;const C=256;for(c=0;c<o;c++){if(m=new Uint32Array(C),g=e[c],"u8"===s)if(a=-.5,h=255.5,i)for(u=0;u<r;u++)i[u]&&m[g[u]]++;else for(u=0;u<r;u++)m[g[u]]++;else{if(a=n[c].minValue,h=n[c].maxValue,f=(h-a)/C,d=new Uint32Array(257),i)for(u=0;u<r;u++)i[u]&&d[Math.floor((g[u]-a)/f)]++;else for(u=0;u<r;u++)d[Math.floor((g[u]-a)/f)]++;for(u=0;u<255;u++)m[u]=d[u];m[255]=d[255]+d[256]}for(p.push({min:a,max:h,size:C,counts:m}),y=0,w=0,M=0,u=0;u<C;u++)y+=m[u],w+=u*m[u];for(b=w/y,u=0;u<C;u++)M+=m[u]*(u-b)**2;v=Math.sqrt(M/(y-1)),f=(h-a)/C,k=(b+.5)*f+a,A=v*f,x.push({min:a,max:h,avg:k,stddev:A})}return{statistics:x,histograms:p}}function f(t){const e=[];for(let i=0;i<t.length;i++){const{min:s,max:n,size:l,counts:r}=t[i];let o=0,a=0;for(let t=0;t<l;t++)o+=r[t],a+=t*r[t];const h=a/o;let f=0;for(let t=0;t<l;t++)f+=r[t]*(t-h)**2;const c=(n-s)/l,u=(h+.5)*c+s,p=Math.sqrt(f/(o-1))*c;e.push({min:s,max:n,avg:u,stddev:p})}return e}function c(t){const{minCutOff:e,maxCutOff:i,gamma:s,pixelType:n}=t,l=t.outMin||0,r=t.outMax||255;if(-1===["u8","u16","s8","s16"].indexOf(n))return null;const o=e.length;let a,h,f=0;"s8"===n?f=-127:"s16"===n&&(f=-32767);let c=256;["u16","s16"].indexOf(n)>-1&&(c=65536);const u=[],p=[],x=r-l;for(a=0;a<o;a++)p[a]=i[a]-e[a],u[a]=x/(i[a]-e[a]);const m=s&&s.length>=o,d=[];if(m)for(a=0;a<o;a++)s[a]>1?s[a]>2?d[a]=6.5+(s[a]-2)**2.5:d[a]=6.5+100*(2-s[a])**4:d[a]=1;let g;const y=[];let w,k,A;if(m)for(a=0;a<o;a++){for(A=[],h=0;h<c;h++)w=h+f,g=(w-e[a])/p[a],k=1,s[a]>1&&(k-=(1/x)**(g*d[a])),w<i[a]&&w>e[a]?A[h]=Math.floor(k*x*g**(1/s[a]))+l:w>=i[a]?A[h]=r:A[h]=l;y[a]=A}else for(a=0;a<o;a++){for(A=[],h=0;h<c;h++)w=h+f,w<=e[a]?A[h]=l:w>=i[a]?A[h]=r:A[h]=Math.floor((w-e[a])/p[a]*x)+l;y[a]=A}if(null!=t.contrastOffset){const e=function(t,e){const i=Math.min(Math.max(t,-100),100),s=Math.min(Math.max(e,-100),100),n=255,l=128;let r,o;const a=new Uint8Array(256);for(r=0;r<256;r++)i>0&&i<100?o=(200*r-100*n+2*n*s)/(2*(100-i))+l:i<=0&&i>-100?o=(200*r-100*n+2*n*s)*(100+i)/2e4+l:100===i?(o=200*r-100*n+(n+1)*(100-i)+2*n*s,o=o>0?n:0):-100===i&&(o=l),a[r]=o>n?n:o<0?0:o;return a}(t.contrastOffset,t.brightnessOffset);for(a=0;a<o;a++)for(A=y[a],h=0;h<c;h++)A[h]=e[A[h]]}return{lut:y,offset:f}}function u(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:256;e=Math.min(e,256);const{size:i,counts:s}=t,n=new Uint8Array(i),l=s.reduce(((t,i)=>t+i/e),0);let r=0,o=0,a=0,h=l;for(let f=0;f<i;f++)if(a+=s[f],!(f<i-1&&a+s[f+1]<h)){for(;r<e-1&&h<a;)r++,h+=l;for(let t=o;t<=f;t++)n[t]=r;o=f+1}for(let f=o;f<i;f++)n[f]=e-1;return n}function p(t,e){if(!l(t))return null;const i=t.clone(),{pixels:s,mask:n}=i,{minCutOff:r,maxCutOff:o,gamma:a}=e,h=e.outMin||0,f=e.outMax||255,c=i.width*i.height,u=s.length;let p,x,m,d,g;const y=f-h,w=[],k=[];for(p=0;p<u;p++)k[p]=o[p]-r[p],w[p]=y/(o[p]-r[p]);const A=a&&a.length>=u,M=[];if(A)for(p=0;p<u;p++)a[p]>1?a[p]>2?M[p]=6.5+(a[p]-2)**2.5:M[p]=6.5+100*(2-a[p])**4:M[p]=1;if(A)if(null!=n){for(x=0;x<c;x++)if(n[x])for(p=0;p<u;p++)m=s[p][x],g=(m-r[p])/k[p],d=1,a[p]>1&&(d-=(1/y)**(g*M[p])),m<o[p]&&m>r[p]?s[p][x]=Math.floor(d*y*g**(1/a[p]))+h:m>=o[p]?s[p][x]=f:s[p][x]=h}else for(x=0;x<c;x++)for(p=0;p<u;p++)m=s[p][x],g=(m-r[p])/k[p],d=1,a[p]>1&&(d-=(1/y)**(g*M[p])),m<o[p]&&m>r[p]?s[p][x]=Math.floor(d*y*g**(1/a[p]))+h:m>=o[p]?s[p][x]=f:s[p][x]=h;else if(null!=n){for(x=0;x<c;x++)if(n[x])for(p=0;p<u;p++)m=s[p][x],m<o[p]&&m>r[p]?s[p][x]=Math.floor((m-r[p])/k[p]*y)+h:m>=o[p]?s[p][x]=f:s[p][x]=h}else for(x=0;x<c;x++)for(p=0;p<u;p++)m=s[p][x],m<o[p]&&m>r[p]?s[p][x]=Math.floor((m-r[p])/k[p]*y)+h:m>=o[p]?s[p][x]=f:s[p][x]=h;return i.pixelType="u8",i.updateStatistics(),i}function x(t,e){if(!l(t))return null;const{pixels:i,mask:s}=t,r=t.width*t.height,o=i.length;let a=e.lut;const{offset:h}=e;let f,c;a&&1===a[0].length&&(a=i.map((()=>a)));const u=[];let p,x,m;if(h)if(null==s)for(f=0;f<o;f++){for(p=i[f],x=a[f],m=new Uint8Array(r),c=0;c<r;c++)m[c]=x[p[c]-h];u.push(m)}else for(f=0;f<o;f++){for(p=i[f],x=a[f],m=new Uint8Array(r),c=0;c<r;c++)s[c]&&(m[c]=x[p[c]-h]);u.push(m)}else if(null==s)for(f=0;f<o;f++){for(p=i[f],x=a[f],m=new Uint8Array(r),c=0;c<r;c++)m[c]=x[p[c]];u.push(m)}else for(f=0;f<o;f++){for(p=i[f],x=a[f],m=new Uint8Array(r),c=0;c<r;c++)s[c]&&(m[c]=x[p[c]]);u.push(m)}const d=new n.Z({width:t.width,height:t.height,pixels:u,mask:s,pixelType:"u8"});return d.updateStatistics(),d}function m(t,e){if(!l(t))return null;const i=t.clone(),{pixels:s}=i,n=i.width*i.height,r=e.length,o=Math.floor(r/2),a=e[Math.floor(o)],h=s[0];let f,c,u,p,x,m,d=!1;const g=new Uint8Array(n),y=new Uint8Array(n),w=new Uint8Array(n);let k=i.mask;const A=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(n),k.fill(A?255:1),i.mask=k),x=0;x<n;x++)if(k[x]){for(f=h[x],d=!1,m=o,c=a,u=0,p=r-1;p-u>1;){if(f===c.value){d=!0;break}f>c.value?u=m:p=m,m=Math.floor((u+p)/2),c=e[Math.floor(m)]}d||(f===e[u].value?(c=e[u],d=!0):f===e[p].value?(c=e[p],d=!0):f<e[u].value?(d=!1,c=null):f>e[u].value&&(f<e[p].value?(c=e[u],d=!0):p===r-1?(d=!1,c=null):(c=e[p],d=!0))),d?(g[x]=c.mappedColor[0],y[x]=c.mappedColor[1],w[x]=c.mappedColor[2],k[x]=c.mappedColor[3]):g[x]=y[x]=w[x]=k[x]=0}return i.pixels=[g,y,w],i.mask=k,i.pixelType="u8",i.maskIsAlpha=A,i}function d(t,e){if(!t||0===t.length)return null;const i=t.find((t=>t.pixelBlock));if(!i||(0,s.Wi)(i.pixelBlock))return null;const n=(i.extent.xmax-i.extent.xmin)/i.pixelBlock.width,l=(i.extent.ymax-i.extent.ymin)/i.pixelBlock.height,r=.01*Math.min(n,l),o=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>r?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>r?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,o.map((t=>t.extent.xmin))),h=Math.min.apply(null,o.map((t=>t.extent.ymin))),f=Math.max.apply(null,o.map((t=>t.extent.xmax))),c=Math.max.apply(null,o.map((t=>t.extent.ymax))),u={x:Math.round((e.xmin-a)/n),y:Math.round((c-e.ymax)/l)},p={width:Math.round((f-a)/n),height:Math.round((c-h)/l)},x={width:Math.round((e.xmax-e.xmin)/n),height:Math.round((e.ymax-e.ymin)/l)};return Math.round(p.width/i.pixelBlock.width)*Math.round(p.height/i.pixelBlock.height)!==o.length||u.x<0||u.y<0||p.width<x.width||p.height<x.height?null:{extent:e,pixelBlock:y(o.map((t=>t.pixelBlock)),p,{clipOffset:u,clipSize:x})}}function g(t,e,i,s,n,l){const{width:r,height:o}=i.block,{x:a,y:h}=i.offset,{width:f,height:c}=i.mosaic,u=function(t,e,i,s,n,l,r,o){return{xmin:n<=i*t?0:n<i*t+t?n-i*t:t,ymin:l<=s*e?0:l<s*e+e?l-s*e:e,xmax:n+r<=i*t?0:n+r<i*t+t?n+r-i*t:t,ymax:l+o<=s*e?0:l+o<s*e+e?l+o-s*e:e}}(r,o,s,n,a,h,f,c);let p=0,x=0;if(l){const t=l.hasGCSSShiftTransform?360:l.halfWorldWidth,e=r*l.resolutionX,i=l.startX+s*e,n=i+e;i<t&&n>t?x=l.rightPadding:i>=t&&(p=l.leftMargin-l.rightPadding,x=0)}if(u.xmax-=x,"number"!=typeof e)for(let m=u.ymin;m<u.ymax;m++){const i=(n*o+m-h)*f+(s*r-a)+p,l=m*r;for(let s=u.xmin;s<u.xmax;s++)t[i+s]=e[l+s]}else for(let m=u.ymin;m<u.ymax;m++){const i=(n*o+m-h)*f+(s*r-a)+p;for(let s=u.xmin;s<u.xmax;s++)t[i+s]=e}}function y(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{clipOffset:r,clipSize:o,alignmentInfo:a,blockWidths:h}=i;if(h)return w(t,e,{blockWidths:h});const f=t.find((t=>l(t)));if((0,s.Wi)(f))return null;const c=o?o.width:e.width,u=o?o.height:e.height,p=f.width,x=f.height,m=e.width/p,d=e.height/x,y={offset:r||{x:0,y:0},mosaic:o||e,block:{width:p,height:x}},k=f.pixelType,A=n.Z.getPixelArrayConstructor(k),M=f.pixels.length,b=[];let v,C,U;for(let s=0;s<M;s++){C=new A(c*u);for(let e=0;e<d;e++)for(let i=0;i<m;i++){const n=t[e*m+i];l(n)&&(v=n.pixels[s],g(C,v,y,i,e,a))}b.push(C)}if(t.some((t=>(0,s.Wi)(t)||t.mask&&t.mask.length>0))){U=new Uint8Array(c*u);for(let e=0;e<d;e++)for(let i=0;i<m;i++){const n=t[e*m+i];g(U,((0,s.pC)(n)?n.mask:null)||(n?1:0),y,i,e,a)}}const T=new n.Z({width:c,height:u,pixels:b,pixelType:k,mask:U});return T.updateStatistics(),T}function w(t,e,i){const r=t.find((t=>(0,s.pC)(t)));if(!(0,s.pC)(r))return null;const o=t.some((t=>!(0,s.pC)(t)||!!t.mask)),{width:a,height:h}=e,f=o?new Uint8Array(a*h):null,{blockWidths:c}=i,u=[],p=r.getPlaneCount(),x=n.Z.getPixelArrayConstructor(r.pixelType);if(o)for(let s=0,n=0;s<t.length;n+=c[s],s++){const e=t[s];if(!l(e))continue;const i=e.mask;for(let t=0;t<h;t++)for(let l=0;l<c[s];l++)f[t*a+l+n]=null==i?255:i[t*e.width+l]}for(let s=0;s<p;s++){const e=new x(a*h);for(let i=0,n=0;i<t.length;n+=c[i],i++){const r=t[i];if(!l(r))continue;const o=r.pixels[s];if(null!=o)for(let t=0;t<h;t++)for(let s=0;s<c[i];s++)e[t*a+s+n]=o[t*r.width+s]}u.push(e)}const m=new n.Z({width:a,height:h,mask:f,pixels:u,pixelType:r.pixelType});return m.updateStatistics(),m}function k(t,e,i){if(!l(t))return null;const{width:s,height:n}=t,r=e.x,o=e.y,a=i.width+r,h=i.height+o;if(r<0||o<0||a>s||h>n)return t;if(0===r&&0===o&&a===s&&h===n)return t;t.mask||(t.mask=new Uint8Array(s*n));const f=t.mask;for(let l=0;l<n;l++){const t=l*s;for(let e=0;e<s;e++)f[t+e]=l<o||l>=h||e<r||e>=a?0:1}return t.updateStatistics(),t}function A(t){if(!l(t))return null;const e=t.clone(),{width:i,height:s,pixels:n,mask:r}=t,o=n[0],a=e.pixels[0];for(let l=2;l<s-1;l++){const t=new Map;for(let s=l-2;s<l+2;s++)for(let e=0;e<4;e++){const n=s*i+e;v(t,o[n],r?r[n]:1)}a[l*i]=M(t),a[l*i+1]=a[l*i+2]=a[l*i];let e=3;for(;e<i-1;e++){let s=(l-2)*i+e+1;v(t,o[s],r?r[s]:1),s=(l-1)*i+e+1,v(t,o[s],r?r[s]:1),s=l*i+e+1,v(t,o[s],r?r[s]:1),s=(l+1)*i+e+1,v(t,o[s],r?r[s]:1),s=(l-2)*i+e-3,b(t,o[s],r?r[s]:1),s=(l-1)*i+e-3,b(t,o[s],r?r[s]:1),s=l*i+e-3,b(t,o[s],r?r[s]:1),s=(l+1)*i+e-3,b(t,o[s],r?r[s]:1),a[l*i+e]=M(t)}a[l*i+e+1]=a[l*i+e]}for(let l=0;l<i;l++)a[l]=a[i+l]=a[2*i+l],a[(s-1)*i+l]=a[(s-2)*i+l];return e.updateStatistics(),e}function M(t){if(0===t.size)return 0;let e=0,i=-1,s=0;const n=t.keys();let l=n.next();for(;!l.done;)s=t.get(l.value),s>e&&(i=l.value,e=s),l=n.next();return i}function b(t,e,i){if(0===i)return;const s=t.get(e);1===s?t.delete(e):t.set(e,s-1)}function v(t,e,i){0!==i&&t.set(e,t.has(e)?t.get(e)+1:1)}function C(t,e,i){let{x:s,y:r}=e;const{width:o,height:a}=i;if(0===s&&0===r&&a===t.height&&o===t.width)return t;const{width:h,height:f}=t,c=Math.max(0,r),u=Math.max(0,s),p=Math.min(s+o,h),x=Math.min(r+a,f);if(p<0||x<0||!l(t))return null;s=Math.max(0,-s),r=Math.max(0,-r);const{pixels:m,mask:d}=t,g=o*a,y=m.length,w=[];for(let l=0;l<y;l++){const e=m[l],i=n.Z.createEmptyBand(t.pixelType,g);for(let t=c;t<x;t++){const n=t*h;let l=(t+r-c)*o+s;for(let t=u;t<p;t++)i[l++]=e[n+t]}w.push(i)}const k=new Uint8Array(g);for(let n=c;n<x;n++){const t=n*h;let e=(n+r-c)*o+s;for(let i=u;i<p;i++)k[e++]=d?d[t+i]:1}const A=new n.Z({width:i.width,height:i.height,pixelType:t.pixelType,pixels:w,mask:k});return A.updateStatistics(),A}function U(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!l(t))return null;const{pixels:i,width:s,height:r,mask:o,pixelType:a}=t,h=[],f=Math.round(s/2),c=Math.round(r/2),u=r-1,p=s-1;for(let l=0;l<i.length;l++){const t=i[l],o=n.Z.createEmptyBand(a,f*c);let x=0;for(let i=0;i<r;i+=2)for(let n=0;n<s;n+=2){const l=t[i*s+n];if(e){const e=n===p?l:t[i*s+n+1],r=i===u?l:t[i*s+n+s],a=n===p?r:i===u?e:t[i*s+n+s+1];o[x++]=(l+e+r+a)/4}else o[x++]=l}h.push(o)}let x=null;if(o){x=new Uint8Array(f*c);let t=0;for(let i=0;i<r;i+=2)for(let n=0;n<s;n+=2){const l=o[i*s+n];if(e){const e=n===p?l:o[i*s+n+1],r=i===u?l:o[i*s+n+s],a=n===p?r:i===u?e:o[i*s+n+s+1];x[t++]=l*e*r*a?1:0}else x[t++]=l}}return new n.Z({width:f,height:c,pixelType:a,pixels:h,mask:x})}function T(t,e,i){if(!l(t))return null;const{width:s,height:n}=e;let{width:r,height:o}=t;const a=new Map,h={x:0,y:0},f=null==i?1:1+i;let c=t;for(let l=0;l<f;l++){const t=Math.ceil(r/s),i=Math.ceil(o/n);for(let r=0;r<i;r++){h.y=r*n;for(let i=0;i<t;i++){h.x=i*s;const t=C(c,h,e);a.set(`${l}/${r}/${i}`,t)}}l<f-1&&(c=U(c)),r=Math.round(r/2),o=Math.round(o/2)}return a}function B(t,e,i,s){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const{width:l,height:r}=t,{width:o,height:a}=e,h=s.cols,f=s.rows,c=Math.ceil(o/h-.1/h),u=Math.ceil(a/f-.1/f);let p,x,m,d,g,y,w;const k=c*h,A=k*u*f,M=new Float32Array(A),b=new Float32Array(A),v=new Uint32Array(A),C=new Uint32Array(A);let U,T,B=0;for(let _=0;_<u;_++)for(let t=0;t<c;t++){p=12*(_*c+t),x=i[p],m=i[p+1],d=i[p+2],g=i[p+3],y=i[p+4],w=i[p+5];for(let e=0;e<f;e++){B=(_*f+e)*k+t*h,T=(e+.5)/f;for(let t=0;t<e;t++)U=(t+.5)/h,M[B+t]=(x*U+m*T+d)*l-n,b[B+t]=(g*U+y*T+w)*r-n,v[B+t]=Math.round(M[B+t]),C[B+t]=Math.round(b[B+t])}p+=6,x=i[p],m=i[p+1],d=i[p+2],g=i[p+3],y=i[p+4],w=i[p+5];for(let e=0;e<f;e++){B=(_*f+e)*k+t*h,T=(e+.5)/f;for(let t=e;t<h;t++)U=(t+.5)/h,M[B+t]=(x*U+m*T+d)*l-n,b[B+t]=(g*U+y*T+w)*r-n,v[B+t]=Math.round(M[B+t]),C[B+t]=Math.round(b[B+t])}}return{offsets_x:M,offsets_y:b,offsets_xi:v,offsets_yi:C,gridWidth:k}}function _(t,e){const{coefficients:i,spacing:s}=e,{offsets_x:n,offsets_y:l,gridWidth:r}=B(t,t,i,{rows:s[0],cols:s[1]},.5),{width:o,height:a}=t,h=new Float32Array(o*a),f=180/Math.PI;for(let c=0;c<a;c++)for(let t=0;t<o;t++){const e=c*r+t,i=0===c?e:e-r,s=c===a-1?e:e+r,u=n[i]-n[s],p=l[s]-l[i];if(isNaN(u)||isNaN(p))h[c*o+t]=90;else{let e=Math.atan2(p,u)*f;e=(360+e)%360,h[c*o+t]=e}}return h}function P(t,e,i,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"nearest";if(!l(t))return null;"majority"===r&&(t=A(t));const{pixels:o,mask:a,pixelType:h}=t,f=t.width,c=t.height,u=n.Z.getPixelArrayConstructor(h),p=o.length,{width:x,height:m}=e;let d=!1;for(let n=0;n<i.length;n+=3)-1===i[n]&&-1===i[n+1]&&-1===i[n+2]&&(d=!0);const{offsets_x:g,offsets_y:y,offsets_xi:w,offsets_yi:k,gridWidth:M}=B({width:f,height:c},e,i,s,"majority"===r?0:.5);let b;const v=(t,e,i)=>{const s=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let n=0;n<m;n++){b=n*M;for(let l=0;l<x;l++){if(g[b]<0||y[b]<0)t[n*x+l]=0;else if(i)t[n*x+l]=e[w[b]+k[b]*f];else{const i=Math.floor(g[b]),r=Math.floor(y[b]),o=Math.ceil(g[b]),h=Math.ceil(y[b]),c=g[b]-i,u=y[b]-r;if(!a||a[i+r*f]&&a[i+r*f]&&a[i+h*f]&&a[o+h*f]){const a=(1-c)*e[i+r*f]+c*e[o+r*f],p=(1-c)*e[i+h*f]+c*e[o+h*f];t[n*x+l]=(1-u)*a+u*p+s}else t[n*x+l]=e[w[b]+k[b]*f]}b++}}},C=[];let U;for(let n=0;n<p;n++)U=new u(x*m),v(U,o[n],"nearest"===r||"majority"===r),C.push(U);const T=new n.Z({width:x,height:m,pixelType:h,pixels:C});if(a)T.mask=new Uint8Array(x*m),v(T.mask,a,!0);else if(d){T.mask=new Uint8Array(x*m);for(let t=0;t<x*m;t++)T.mask[t]=g[t]<0||y[t]<0?0:1}return T.updateStatistics(),T}}}]);
//# sourceMappingURL=7314.84b59545.chunk.js.map